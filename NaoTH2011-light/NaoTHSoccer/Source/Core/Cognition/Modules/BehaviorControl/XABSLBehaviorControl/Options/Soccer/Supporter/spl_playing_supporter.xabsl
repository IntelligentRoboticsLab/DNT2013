/** Playing as supporter */
option spl_playing_supporter { 

  state avoid_obstacle {
    decision {
      if(action_done)
        goto support_if_needed;
      else
        stay;
    }
    action 
    {
      avoid_obstacle();
    }  
  }

  initial state ball_not_seen {
   decision{
     if ( last_state_was_penalized )
       goto go_to_default_position; // return from penalty
     else if(action_done)
       goto supporting;
     else if(state_time > 30000) // can not find ball!!
       goto go_to_default_position;
     else
       stay;
   }
    action {
      ball_not_seen_situation();
      check_collision();
    }
  }

  state supporting {
    decision{
      if(obstacle.ultrasound.distance < 350)
      {
        goto avoid_obstacle;
      }
     else if( action_done && ball.time_since_last_seen > 5000 && 
                             ball.team.time_since_last_update > 5000)
        goto ball_not_seen;
     else
        stay;
    }
      action {
        spl_supporter();
        check_collision();
      }
  }

  state go_to_default_position {
    decision {
      if ( ball.was_seen )
        goto supporting;
      else if(obstacle.ultrasound.distance < 350 && motion.walk_speed.x > 0 
          && motion.type == walk )
      {
        goto avoid_obstacle;
      }
      else if ( action_done || state_time > 30000)
        goto ball_not_seen;
      else
        stay;
    }
    action {
       decide_strategy_position();
       head.control_mode = smart_search;
       check_collision();
    }
  }
  
}